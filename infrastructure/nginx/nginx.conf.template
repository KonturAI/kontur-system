user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;

events {
    worker_connections 768;
}

http {
    server_names_hash_bucket_size 128;
    sendfile on;
    tcp_nopush on;
    client_max_body_size 2048M;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    access_log /var/log/nginx/access.log;
    gzip on;

    server {
        server_name kontur-media.ru;
        listen 80;

        location / {
            proxy_pass http://127.0.0.1:3000;
        }

        location /api/tg-bot {
            proxy_pass http://127.0.0.1:8005;
        }

        location /api/account {
            proxy_pass http://127.0.0.1:8000;
        }

        location /api/authorization {
            proxy_pass http://127.0.0.1:8001;
        }

        location /api/employee {
            proxy_pass http://127.0.0.1:8002;
        }

        location /api/organization {
            proxy_pass http://127.0.0.1:8003;
        }

        location /api/content {
            proxy_pass http://127.0.0.1:8004;
        }

        location /telegram-bot-api/ {
            proxy_pass http://127.0.0.1:8081/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 2000M;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
        }

        location /telegram-bot-files/ {
            alias /root/kontur/kontur-system/volumes/tg-bot-api/;

            # Отключаем логирование статики (разгружаем диски)
            access_log off;

            # ВИДЕО - максимальная оптимизация для потокового воспроизведения
            location ~* \.(mp4|webm|mov|avi|mkv|m4v)$ {
                # MP4 модуль для fast seeking
                mp4;
                mp4_buffer_size 2m;
                mp4_max_buffer_size 10m;

                # Поддержка HTTP Range запросов (важно для видео)
                add_header Accept-Ranges bytes;

                # Агрессивное кеширование видео (они редко меняются)
                expires 1y;
                add_header Cache-Control "public, immutable";

                # CORS для видео (если нужно)
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Range";

                # Оптимизация TCP для больших файлов
                sendfile on;
                sendfile_max_chunk 2m;
                tcp_nopush on;
                tcp_nodelay off;

                # Отключаем gzip (видео уже сжато)
                gzip off;

                # Правильный MIME-type
                location ~* \.mp4$ { add_header Content-Type video/mp4; }
                location ~* \.webm$ { add_header Content-Type video/webm; }
                location ~* \.mov$ { add_header Content-Type video/quicktime; }
                location ~* \.avi$ { add_header Content-Type video/x-msvideo; }

                try_files $uri =404;
            }

            # ФОТО - оптимизация для быстрой загрузки
            location ~* \.(jpg|jpeg|png|gif|webp|bmp|ico)$ {
                # Долгое кеширование фото
                expires 1y;
                add_header Cache-Control "public, immutable";

                # Поддержка conditional requests
                add_header Last-Modified $date_gmt;
                add_header ETag off;
                if_modified_since exact;

                # Сжатие для текстовых форматов (SVG)
                gzip_vary on;
                gzip on;
                gzip_types
                    image/svg+xml;

                # TCP оптимизация для фото
                sendfile on;
                tcp_nopush on;
                tcp_nodelay on;

                # CORS для изображений
                add_header Access-Control-Allow-Origin *;

                # Правильные MIME-types
                location ~* \.jpg$ { add_header Content-Type image/jpeg; }
                location ~* \.jpeg$ { add_header Content-Type image/jpeg; }
                location ~* \.png$ { add_header Content-Type image/png; }
                location ~* \.gif$ { add_header Content-Type image/gif; }
                location ~* \.webp$ { add_header Content-Type image/webp; }

                try_files $uri =404;
            }

            # АУДИО (если будет)
            location ~* \.(mp3|wav|ogg|m4a|aac|flac)$ {
                add_header Accept-Ranges bytes;
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Access-Control-Allow-Origin *;

                sendfile on;
                tcp_nopush on;

                try_files $uri =404;
            }

            # Запрещаем доступ ко всем остальным файлам
            location ~ ^/telegram-bot-files/.*$ {
                return 403;
            }
        }

        location /grafana {
            proxy_pass http://127.0.0.1:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Grafana-Org-Id 1;
            proxy_set_header X-Forwarded-Prefix /grafana;
            rewrite ^/grafana/(.*)$ /$1 break;
        }
    }
}